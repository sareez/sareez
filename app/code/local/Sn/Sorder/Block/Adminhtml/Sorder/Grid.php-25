<?php

class Sn_Sorder_Block_Adminhtml_Sorder_Grid extends Mage_Adminhtml_Block_Widget_Grid
{
  public function __construct()
  {
      parent::__construct();
      $this->setId('sorderGrid');
      $this->setDefaultSort('id');
      $this->setDefaultDir('ASC');
      $this->setSaveParametersInSession(true);
  }
  
   protected function prepareDefaults()
    {
        $this->setDefaultLimit( Mage::getStoreConfig( 'salesorderitemgrid/defaults/limit' ) );
        $this->setDefaultPage( Mage::getStoreConfig( 'salesorderitemgrid/defaults/page' ) );
    }

  protected function _prepareCollection()
  {
	  
	
      $collection = Mage::getModel('sorder/sorder')->getCollection();
	  
	  $collection->join(array('og' =>'sales/order_grid'), 'main_table.order_id = og.entity_id', array('billing_name', 'shipping_name', 'increment_id', 'status', 'og_created_at' =>'og.created_at') );
		
        $collection->join(array('si' => 'cataloginventory/stock_item'), 'main_table.product_id = si.product_id', array('si_qty' => 'si.qty'));
		
		     $collection->join(array('a' => 'sales/order_address'), 'og.entity_id = a.parent_id AND a.address_type != \'billing\'', array(
                'city'       => 'city',
                'country_id' => 'country_id'
            ));
		
		   $collection->join(array('sj' => 'catalogmaster/catalogmaster'), 'main_table.catalogmaster_id = sj.catalog_id', array('sj.*'));	
		   
		     $collection->join(array('sm' => 'manufacturers/manufacturers'), 'main_table.manufacturers_id = sm.manufacturers_id', array('sm.*'));	
			 
			 $collection->join(array('sp' => 'tailormaster/tailormaster'), 'main_table.tailormaster_id = sp.tailormaster_id', array('sp.*'));
			
			
/*	$collection->join(
                array('catalog/product'),
                'main_table.sku = catalog/product.sku',
                array('manufacturers_id', 'catalogmaster_id'));
			*/
			
//$collection = Mage::getModel('catalog/product')->getCollection()->addAttributeToSelect('*')           ->load();					
						
//$collection->addAttributeToFilter('sku', array('neq' => 'main_table.sku'));


		//$collection->join(array('k' =>'catalog/product'), 'main_table.sku = k.sku',array('catalogmaster_id => catalogmaster_id'));
			

			
			
			//$collection->join('catalog/product', 'main_table.product_id=`catalog/product`.entity_id', array('product_sku' => 'sku'));

			//$collection->join(array('m' =>'catalogmaster/catalogmaster'), 'main_table.entity_id = m.entity_id');
			
      $this->setCollection($collection);
      return parent::_prepareCollection();
  }

  protected function _prepareColumns()
  {
      $this->addColumn('id', array(
          'header'    => Mage::helper('sorder')->__('SL NO'),
          'align'     =>'right',
          'width'     => '50px',
          'index'     => 'id',
      ));
	  
	   $this->addColumn('created_at', array(
                'header' => Mage::helper('sales')->__('DATE'),
                'sortable' => true,
                'width' => '60',
                'index' => 'og_created_at',
                'filter_index' => 'og.created_at',
                'type'  => 'datetime'
        ));
	  
	    $this->addColumn('order_id', array(
          'header'    => Mage::helper('sorder')->__('Order ID'),
          'align'     =>'right',
          'width'     => '50px',
          'index'     => 'order_id',
      ));
	   if (Mage::getStoreConfig('salesorderitemgrid/columns/showbillingname')) {
            $this->addColumn('billing_name', array(
                    'header' => Mage::helper('sales')->__('Customer Name'),
                    'sortable' => true,
                    'index' => 'billing_name'
            ));
        }
		 $this->addColumn('status', array(
            'header' => Mage::helper('sales')->__('Status'),
            'index' => 'status',
            'type'  => 'options',
            'width' => '70px',
            'options' => Mage::getSingleton('sales/order_config')->getStatuses(),
        ));
		$this->addColumn('sku', array(
          'header'    => Mage::helper('sorder')->__('Sku Code'),
          'align'     =>'right',
          'width'     => '50px',
          'index'     => 'sku',
      ));
	  
	  $this->addColumn('stitchingstatus_id', array(
          'header'    => Mage::helper('sorder')->__('Product Status'),
          'align'     =>'right',
          'width'     => '50px',
          'index'     => 'stitchingstatus_id',
      ));
		 
		  $this->addColumn('exprees_shipping_available', array(
          'header'    => Mage::helper('sorder')->__('Delivary Time'),
          'align'     =>'right',
          'width'     => '50px',
          'index'     => 'exprees_shipping_available',		  
      ));
	    $this->addColumn('product_comment', array(
          'header'    => Mage::helper('sorder')->__('Product Comment'),
          'align'     =>'right',
          'width'     => '50px',
          'index'     => 'product_comment',
		  
      ));
		
	
	$this->addColumn('manufacturers_name',
        array(
            'header'   => Mage::helper('sorder')->__('Manufacturer Name'),
            'index'    => 'manufacturers_name',
            'type'  => 'text',
			//'renderer' => 'Sn_Sorder_Block_Adminhtml_Sorder_Grid_Renderer_Manufacturers'

));
	
		$this->addColumn('catalog_name',
        array(
            'header'   => Mage::helper('sorder')->__('Catalog Name'),
            'index'    => 'catalog_name',
            'type'  => 'text',
			//'renderer' => 'Sn_Sorder_Block_Adminhtml_Sorder_Grid_Renderer_Catalogmaster'
));

	$this->addColumn('manufacturer_design',
        array(
            'header'   => Mage::helper('sorder')->__('Manufacturer Design Number'),
            'index'    => 'manufacturer_design',
            'type'  => 'text',
			//'renderer' => 'Sn_Sorder_Block_Adminhtml_Sorder_Grid_Renderer_Manufacturers'

));


	$this->addColumn('product_stitching_type', array(
          'header'    => Mage::helper('sorder')->__('Stitching Type'),
          'align'     =>'right',
          'width'     => '50px',
          'index'     => 'product_stitching_type',
		
      ));
	    $this->addColumn('stitchingstatus_id', array(
          'header'    => Mage::helper('sorder')->__('Stitching Status'),
          'align'     =>'right',
          'width'     => '50px',
          'index'     => 'stitchingstatus_id',
      ));
	  
	
	  $this->addColumn('unique_stitching_id', array(
          'header'    => Mage::helper('sorder')->__('Stitching Id'),
          'align'     =>'right',
          'width'     => '50px',
          'index'     => 'unique_stitching_id',
      ));




	  $this->addColumn('tailorname', array(
          'header'    => Mage::helper('sorder')->__('Master Name'),
          'align'     =>'right',
          'width'     => '50px',
          'index'     => 'tailorname',
		  //'renderer' => 'Sn_Sorder_Block_Adminhtml_Sorder_Grid_Renderer_Tailormaster'
      ));
	  
	    $this->addColumn('sending_date', array(
          'header'    => Mage::helper('sorder')->__('St. Sending Date'),
          'align'     =>'right',
          'width'     => '50px',
          'index'     => 'sending_date',
		  'type'  => 'datetime'
      ));
	  
	    $this->addColumn('reciving_date', array(
          'header'    => Mage::helper('sorder')->__('St. Receving Date'),
          'align'     =>'right',
          'width'     => '50px',
          'index'     => 'reciving_date',
		  'type'  => 'text'
      ));
	  $this->addColumn('comment', array(
          'header'    => Mage::helper('sorder')->__('Stitching Comment'),
          'align'     =>'right',
          'width'     => '50px',
          'index'     => 'comment',
      ));
	  
	    $this->addColumn('currier', array(
          'header'    => Mage::helper('sorder')->__('Currier'),
          'align'     =>'right',
          'width'     => '50px',
          'index'     => 'currier',
      ));
	  
	  /*	if (Mage::getStoreConfig('salesorderitemgrid/columns/showsstatus')) {
            $this->addColumn('status', array(
                    'header' => Mage::helper('sales')->__('Order Status'),
                    'index' => 'status',
                    'filter_index' => 'status',
                    'type'  => 'options',
                    'width' => '70px',
                    'options' => Mage::getSingleton('sales/order_config')->getStatuses(),
            ));
        }
		
		*/
		
 /*
      $this->addColumn('title', array(
          'header'    => Mage::helper('sorder')->__('Title'),
          'align'     =>'left',
          'index'     => 'title',
      ));

	  /*
      $this->addColumn('content', array(
			'header'    => Mage::helper('sorder')->__('Item Content'),
			'width'     => '150px',
			'index'     => 'content',
      ));
	  */

     /* $this->addColumn('status', array(
          'header'    => Mage::helper('sorder')->__('Status'),
          'align'     => 'left',
          'width'     => '80px',
          'index'     => 'status',
          'type'      => 'options',
          'options'   => array(
              1 => 'Enabled',
              2 => 'Disabled',
          ),
      ));*/
	  
      //  $this->addColumn('action',
//            array(
//                'header'    =>  Mage::helper('sorder')->__('Action'),
//                'width'     => '100',
//                'type'      => 'action',
//                'getter'    => 'getId',
//                'actions'   => array(
//                    array(
//                        'caption'   => Mage::helper('sorder')->__('Edit'),
//                        'url'       => array('base'=> '*/*/edit'),
//                        'field'     => 'id'
//                    )
//                ),
//                'filter'    => false,
//                'sortable'  => false,
//                'index'     => 'stores',
//                'is_system' => true,
//        ));
		
		$this->addExportType('*/*/exportCsv', Mage::helper('sorder')->__('CSV'));
		$this->addExportType('*/*/exportXml', Mage::helper('sorder')->__('XML'));
	  
      return parent::_prepareColumns();
  }

   // protected function _prepareMassaction()
//    {
//        $this->setMassactionIdField('id');
//        $this->getMassactionBlock()->setFormFieldName('sorder');
//
//        $this->getMassactionBlock()->addItem('delete', array(
//             'label'    => Mage::helper('sorder')->__('Delete'),
//             'url'      => $this->getUrl('*/*/massDelete'),
//             'confirm'  => Mage::helper('sorder')->__('Are you sure?')
//        ));
//
//        $statuses = Mage::getSingleton('sorder/status')->getOptionArray();
//
//        array_unshift($statuses, array('label'=>'', 'value'=>''));
//        $this->getMassactionBlock()->addItem('status', array(
//             'label'=> Mage::helper('sorder')->__('Change status'),
//             'url'  => $this->getUrl('*/*/massStatus', array('_current'=>true)),
//             'additional' => array(
//                    'visibility' => array(
//                         'name' => 'status',
//                         'type' => 'select',
//                         'class' => 'required-entry',
//                         'label' => Mage::helper('sorder')->__('Status'),
//                         'values' => $statuses
//                     )
//             )
//        ));
//        return $this;
//    }
//
//  public function getRowUrl($row)
//  {
//      return $this->getUrl('*/*/edit', array('id' => $row->getId()));
//  }

}